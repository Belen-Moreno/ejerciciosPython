#Ana Belen Moreno Rojas IRD-42
16 Ejercicios


#EJERCICIO 1
def contar_ocurrencias(palabras):
    contador = {}
    for palabra in palabras:
        if palabra in contador:
            contador[palabra] += 1
        else:
            contador[palabra] = 1
    return contador

# Ejemplo de uso
palabras = ["python", "java", "python", "c++"]
resultado = contar_ocurrencias(palabras)
print(resultado) # Salida: {"python": 2, "java": 1, "c++": 1}


#EJERCICIO 2
def combinar_diccionarios(dic1, dic2):
    resultado = dic1.copy() # Copia el primer diccionario
    for clave, valor in dic2.items():
        if clave in resultado:
            resultado[clave] += valor  # Suma los valores si la clave ya existe
        else:
            resultado[clave] = valor  # Añade la nueva clave y su valor
    return resultado

# Ejemplo de uso
dic1 = {'a': 1, 'b': 2}
dic2 = {'b': 3, 'c': 4}
resultado = combinar_diccionarios(dic1, dic2)
print(resultado) #Salida: {'a': 1, 'b': 5, 'c': 4}


#EJERCICIO 3
def lista_frecuencia(numeros):
    frecuencia = {}
    for numero in numeros:
        if numero in frecuencia:
            frecuencia[numero] += 1
        else:
            frecuencia[numero] = 1
    return frecuencia
# Ejemplo de uso
numeros = [1, 1, 2, 3, 3, 3]
resultado = lista_frecuencia(numeros)
print(resultado) # Salida: {1: 2, 2: 1, 3: 3}


#EJERCICIO 4
def filtrar_palabras_largas(palabras, longitud):
    return [palabra for palabra
            in palabras
            if len(palabra) > longitud]
# Ejemplo de uso
palabras = ["hola", "mundo", "python", "programación"]
longitud = 5
resultado = filtrar_palabras_largas(palabras, longitud)
print(resultado) # Salida: ["programación"]


#EJERCICIO 5
def invertir_tuplas(tuplas):
    return [(b, a) for (a, b) in tuplas]

# Ejemplo de uso
tuplas = [(1, 2), (3, 4), (5, 6)]
resultado = invertir_tuplas(tuplas)
print(resultado)  # Salida: [(2, 1), (4, 3), (6, 5)]


#EJERCICIO 6
from collections import Counter
def valor_mas_frecuente(numeros):
    conteo = Counter(numeros)
    numero_frecuente = conteo.most_common(1)
    return numero_frecuente[0][0] if numero_frecuente else None

# Ejemplo de uso
numeros = [1, 2, 3, 1, 2, 1]
resultado = valor_mas_frecuente(numeros)
print(resultado) # Salida: 1


#EJERCICIO 7
conjunto1={1,2,3}
conjunto2={1,2,3,4,5}

# Ejemplo de uso
conjunto_total=conjunto1.issubset(conjunto2)
print (conjunto_total)


#EJERCICIO 8
def agrupar_por_edad(personas):
    grupos = {}
    for persona in personas:
        edad = persona['edad']
        if edad not in grupos:
            grupos[edad] = []
        grupos[edad].append(persona['nombre'])
    return grupos

# Ejemplo de uso
personas = [{"nombre": "Ana", "edad": 25}, {"nombre": "Luis", "edad": 25}, {"nombre": "Carlos", "edad": 30}]
print(agrupar_por_edad(personas))


#EJERCICIO 9
def merge_sort(numeros):
    if len(numeros) <= 1:
        return numeros
    
    mid = len(numeros) // 2
    izquierda = merge_sort(numeros[:mid])
    derecha = merge_sort(numeros[mid:])

    return merge(izquierda, derecha)

def merge(izquierda, derecha):
    resultado = []
    i = j = 0

    while i < len(izquierda) and j < len(derecha):
        if izquierda[i] < derecha[j]:
            resultado.append(izquierda[i])
            i += 1
        else:
            resultado.append(derecha[j])
            j += 1

    resultado.extend(izquierda[i:])
    resultado.extend(derecha[j:])
    return resultado

# Ejemplo de uso
numeros = [5, 3, 8, 6, 2]
resultado = merge_sort(numeros)
print(resultado)  # Salida: [2, 3, 5, 6, 8]


#EJERCICIO 10
def eliminar_menores(numeros, limite):
    return [num for num in numeros if num >= limite]

# Ejemplo de uso
numeros = [1, 2, 3, 4, 5]
limite = 3
resultado = eliminar_menores(numeros, limite)
print(resultado)  # Salida: [3, 4, 5]


#EJERCICIO 11
def aplanar_lista(lista_de_listas):
    return [elemento for sublista in lista_de_listas for elemento in sublista]

# Ejemplo de uso
lista_de_listas = [[1, 2], [3, 4], [5]]
resultado = aplanar_lista(lista_de_listas)
print(resultado)  # Salida: [1, 2, 3, 4, 5]


#EJERCICIO 12
def calcular_mediana(numeros):
    numeros.sort()
    n = len(numeros)

    if n % 2 == 1:
        return numeros[n // 2]
    else:
        medio1 = numeros[n // 2 - 1]
        medio2 = numeros[n // 2]
        return (medio1 + medio2) / 2

# Ejemplo de uso
numeros = [1, 3, 2, 4, 5]
resultado = calcular_mediana(numeros)
print(resultado)  # Salida: 3


#EJERCICIO 13
def duplicar_elementos(numeros):
    return [num for num in numeros for _ in range(2)]

# Ejemplo de uso
numeros = [1, 2, 3]
resultado = duplicar_elementos(numeros)
print(resultado)  # Salida: [1, 1, 2, 2, 3, 3]


#EJERCICIO 14
def contar_palabras(frases):
    return {i: len(frase.split()) for i, frase in enumerate(frases)}

# Ejemplo de uso
frases = ["Hola mundo", "Python es genial", "Me gusta programar"]
resultado = contar_palabras(frases)
print(resultado)  # Salida: {0: 2, 1: 3, 2: 3}


#EJERCICIO 15
def encontrar_clave_maxima(diccionario):
    return max(diccionario, key=diccionario.get)

# Ejemplo de uso
diccionario = {'a': 10, 'b': 20, 'c': 5}
resultado = encontrar_clave_maxima(diccionario)
print(resultado)  # Salida: 'b'


#EJERCICIO 16
def palindromos(lista):
    return [palabra for palabra in lista if palabra == palabra[::-1]]

palabras = ["ana", "oso", "hola", "level"]
resultado = palindromos(palabras)
print(resultado)
